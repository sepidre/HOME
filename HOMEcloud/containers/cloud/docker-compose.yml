version: '3.8'

services:
 watchtower:
  command: --label-enable --cleanup --interval 300
  image: containrrr/watchtower
  container_name: watchtower
  #environment: 
  # WATCHTOWER_NOTIFICATIONS: email
  # WATCHTOWER_NOTIFICATION_EMAIL_FROM: ${EMAIL_FROM}
  # WATCHTOWER_NOTIFICATION_EMAIL_TO: ${EMAIL_TO}
  # WATCHTOWER_NOTIFICATION_EMAIL_SERVER: ${EMAIL_SERVER}
  # WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT: 25
  # WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER: ${EMAIL_TO}
  # WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD: ${EMAIL_PWD}
  # WATCHTOWER_NOTIFICATION_EMAIL_DELAY: 2
  labels:
   - "com.centurylinklabs.watchtower.enable=true"
  network_mode: none
  restart: always
  volumes:
    - /var/run/docker.sock:/var/run/docker.sock

 cloudflare-ddns:
  container_name: cloudi-pi
  image: oznu/cloudflare-ddns:latest
  restart: unless-stopped
  environment:
   PUID: ${PUID}
   PGID: ${PGID}
   TZ: ${TZ}
   API_KEY: ${cloudflareapi}
   ZONE: ${cloudflarezone}
   DNS_SERVER: ${cloudflareDNS}
  volumes:
   - /etc/localtime:/etc/localtime:ro   

 jelly-pi:
  image: jellyfin/jellyfin
  container_name: jelly-pi
  labels:
   - "com.centurylinklabs.watchtower.enable=true"
  depends_on:
   - watchtower
  environment:
   PUID: ${PUID}
   PGID: ${PGID}
   TZ: ${TZ}
  volumes:
   - ${dockermedia}/jelly-pi:/config
   - ${dockermedia}/data/family:/data/family
   - ${dockermedia}/data/anime:/data/anime
   - ${dockermedia}/data/tvseries:/data/tvshows
   - ${dockermedia}/data/movies:/data/movies
   - /opt/vc/lib:/opt/vc/lib #optional
   - /dev/vchiq:/dev/vchiq
  ports:
   - ${jellyfin_MAIN_PORT}:8096
   - ${jellyfin_UDP1_PORT}:7359/udp #optional
   - ${jellyfin_UDP2_PORT}:1900/udp #optional
  restart: unless-stopped

 glan-pi:
  image: jdreinhardt/glances:latest
  container_name: glan-pi
  restart: unless-stopped
  labels:
   - "com.centurylinklabs.watchtower.enable=true"
  depends_on:
   - watchtower
  privileged: true
  ports:
   - '${glances_PORT}:61208'
  security_opt:
   - no-new-privileges:true
  pid: host
  volumes:
   - ${dockermedia}/glan-pi:/glances/conf/ # Use this if you want to add a glances.conf file
   - /var/run/docker.sock:/var/run/docker.sock:ro # Use Docker Socket Proxy instead for improved security
  environment:
   PUID: ${PUID}
   PGID: ${PGID}
   TZ: ${TZ}
   #GLANCES_OPT: "--export mqtt"
   GLANCES_OPT: "-w"

## Databases
 # InfluxDB - Database for sensor data
 # Create influxdb.conf
 influx_db:
  image: hypriot/rpi-influxdb
  container_name: influx_db
  labels:
   - "com.centurylinklabs.watchtower.enable=true"
  depends_on:
   - watchtower
  restart: unless-stopped
  security_opt:
    - no-new-privileges:true
  ports:
    - "${influx_db_port}:8086"
  volumes:
    - ${dockermedia}/influx_db/influxdb.conf:/etc/influxdb/influxdb.conf:ro
    - ${dockermedia}/influx_db/db:/var/lib/influxdb
  command: -config /etc/influxdb/influxdb.conf

  # Redis - Key-value Store
 redis_db:
  container_name: redis_db
  image: redis:5
  restart: unless-stopped
  entrypoint: redis-server --appendonly yes --requirepass ${redis_db_pw} --maxmemory 512mb --maxmemory-policy allkeys-lru
  environment:
   PUID: ${PUID}
   PGID: ${PGID}
   TZ: ${TZ}
  labels:
   - "com.centurylinklabs.watchtower.enable=true"
  depends_on:
   - watchtower
  ports:
   - "${redis_db_port}:6379"
  security_opt:
   - no-new-privileges:true
  volumes:
   - ${dockermedia}/redis/data:/data
   - /etc/localtime:/etc/localtime:ro

# mysql - Database     
 mysql_db:
  image: hypriot/rpi-mysql
  container_name: mysql_db
  restart: unless-stopped
  labels:
   - "com.centurylinklabs.watchtower.enable=true"
  depends_on:
   - watchtower
  ports:
   - "${mysql_db_port}:3306"
  environment:
   PUID: ${PUID}
   PGID: ${PGID}
   TZ: ${TZ}
   MYSQL_ROOT_PASSWORD: ${mysql_db_root}
  volumes:
   - ${dockermedia}/mysql_db:/var/lib/mysql
   - /etc/localtime:/etc/localtime:ro
   - ${dockermedia}/shared:/shared
     
 maria-db:
  image: tobi312/rpi-mariadb:10.5
  container_name: maria_db
  restart: unless-stopped
  labels:
   - "com.centurylinklabs.watchtower.enable=true"
  depends_on:
   - watchtower
  ports:
   - ${maria_db_port}:3306
  command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW --innodb-file-per-table=1
  volumes:
   - ${dockermedia}/maria_db:/var/lib/mysql
  environment:
   PUID: ${PUID}
   PGID: ${PGID}
   TZ: ${TZ}
   MYSQL_ROOT_PASSWORD: ${mysql_db_root}
   MYSQL_PASSWORD: ${webdav_password}
   MYSQL_DATABASE: nextcloud
   MYSQL_USER: ${webdav_user}
  healthcheck:
   test:  mysqladmin ping -h 127.0.0.1 -u root --password=${mysql_db_root} || exit 1
   interval: 60s
   timeout: 5s
   retries: 5  

 next-pi:
  image: nextcloud:latest
  container_name: next-pi
  restart: unless-stopped
  labels:
   - "com.centurylinklabs.watchtower.enable=true"
  volumes:
   - ${dockermedia}/next-pi:/var/www/html
   - ${dockermedia}/data:/nas
  depends_on:
   - maria-db
   - redis_db
   - watchtower
  ports:
   - "${next_PORT}:80"
  environment:
   MYSQL_PASSWORD: ${webdav_password}
   MYSQL_DATABASE: nextcloud
   MYSQL_USER: ${webdav_user}
   MYSQL_HOST: ${db_host}:${maria_db_port}
   PHP_UPLOAD_LIMIT: 10G
   PHP_MEMORY_LIMIT: 2G
   REDIS_HOST: ${db_host}
   REDIS_HOST_PASSWORD: ${redis_db_pw}
  
 dav-pi:
  image: ugeek/webdav:arm
  container_name: dav-pi
  domainname: ${domain_WAN}
  restart: unless-stopped
  labels:
   - "com.centurylinklabs.watchtower.enable=true"
  depends_on:
   - watchtower
  volumes:
   - /etc/localtime:/etc/localtime:ro
   - /mnt/containers/webdav:/media
   - ${dockermedia}/shared:/shared
  environment:
   PUID: ${PUID}
   PGID: ${PGID}
   TZ: ${TZ}
   USERNAME: ${webdav_user}
   PASSWORD: ${webdav_password}
  ports:
   - "${webdav_PORT}:80"

 port-pi:
  image: portainer/portainer
  container_name: port-pi
  domainname: ${domain_WAN}
  restart: unless-stopped
  labels:
   - "com.centurylinklabs.watchtower.enable=true"
  depends_on:
   - watchtower
  environment:
   PUID: ${PUID}
   PGID: ${PGID}
   TZ: ${TZ}
  volumes:
   - /etc/localtime:/etc/localtime:ro
   - /var/run/docker.sock:/var/run/docker.sock
   - ${dockermedia}/portainer:/data
   - ${dockermedia}/shared:/shared
  ports:
   - "${portainer_PORT}:9000"

 # Duplicati - Backup
 bkp-pi:
  image: linuxserver/duplicati:latest
  container_name: bkp-pi
  restart: unless-stopped
  labels:
   - "com.centurylinklabs.watchtower.enable=true"
  depends_on:
   - watchtower
  security_opt:
   - no-new-privileges:true
  ports:
   - "${duplicati_PORT}:8200"
  volumes:
   - ${dockermedia}/duplicati:/config
   - ${dockermedia}:/nas
  environment:
   PUID: ${PUID}
   PGID: ${PGID}
   TZ: $TZ
   # CLI_ARGS: #optional
   
 mqtt-pi:
  image: eclipse-mosquitto
  container_name: mqtt-pi
  restart: always
  labels:
   - "com.centurylinklabs.watchtower.enable=true"
  depends_on:
   - watchtower
  volumes:
   - ${dockermedia}/mqtt-pi/config:/mosquitto/config
   - ${dockermedia}/mqtt-pi/data:/mosquitto/data
   - ${dockermedia}/mqtt-pi/log:/mosquitto/log
   - ${dockermedia}/shared:/shared
  ports:
   - "${MOSQUITTO_PORT1}:1883"
   - "${MOSQUITTO_PORT2}:9001"

 backup-mysql_db:
  container_name: backup-mysql_db-pi
  image: sepidre/backup-all-mysql-rpi:latest
  restart: always
  environment:
   PUID: ${PUID}
   PGID: ${PGID}
   TZ: $TZ
   BACKUP_INTERVAL: 86400
   BACKUP_FIRSTDELAY: 60
   MYSQL_CONNECTION_PARAMS: '--user=root --host=mysql_db --password=${mysql_db_root}'
  links:
    - mysql_db
  depends_on:
    - mysql_db
  volumes:
    - ${dockermedia}/bkp/sql/mysql:/var/dbdumps

 backup-maria-db:
  container_name: backup-maria-db-pi
  image: sepidre/backup-all-mysql-rpi:latest
  restart: always
  environment:
   PUID: ${PUID}
   PGID: ${PGID}
   TZ: $TZ
   BACKUP_INTERVAL: 86400
   BACKUP_FIRSTDELAY: 60
   MYSQL_CONNECTION_PARAMS: '--user=root --host=maria-db --password=${mysql_db_root}'
  links:
    - maria-db
  depends_on:
    - maria-db
  volumes:
    - ${dockermedia}/bkp/sql/maria:/var/dbdumps

 cloud-doz-pi:
  container_name: cloud-doz-pi
  image: amir20/dozzle:latest
  hostname: cloud-doz-pi
  domainname: ${domain_WAN}
  volumes:
   - /var/run/docker.sock:/var/run/docker.sock
  networks:
   proxy:
  ports:
   - 9999:8080